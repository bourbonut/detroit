# Generated by detroit
# See https://github.com/bourbonut/detroit/tree/main/api_maker

from functools import partial
from operator import is_not

class easeBackOut:
    def __init__(self, content="easeBackOut"):
        self.content = content

    def __repr__(self):
        return self.content

    def __str__(self):
        return self.content

    def __call__(self, *args):
        arguments = ", ".join(map(repr, args))
        return f"{self}({arguments})"

    def overshoot(self, s=None):
        """
        Overshoot:1.70
        Returns a new back easing with the specified overshoot s.

        See more informations `here <https://d3js.org/d3-ease#easeBack_overshoot>`_.
        """
        arguments = ", ".join(map(repr, filter(partial(is_not, None), (s,))))
        return easeBackOut(content=f"{self.content}.overshoot({arguments})")

