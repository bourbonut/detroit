import detroit as d3
from detroit.shape.curves import curve_monotone_x

def test_monotone_x_1():
  line = d3.line().curve(curve_monotone_x)
  assert line([]) is None
  assert line([[0, 1]]) == "M0,1Z"
  assert line([[0, 1], [1, 3]]) == "M0,1L1,3"
  assert line([[0, 1], [1, 3], [2, 1]]) == "M0,1C0.333,2,0.667,3,1,3C1.333,3,1.667,2,2,1"
  assert line([[0, 1], [1, 3], [2, 1], [3, 3]]) == "M0,1C0.333,2,0.667,3,1,3C1.333,3,1.667,1,2,1C2.333,1,2.667,2,3,3"

def test_monotone_x_2():
  line = d3.line().curve(curve_monotone_x)
  assert line([[0, 200], [100, 100], [200, 100], [300, 300], [400, 300]]) == "M0,200C33.333,150,66.667,100,100,100C133.333,100,166.667,100,200,100C233.333,100,266.667,300,300,300C333.333,300,366.667,300,400,300"

def test_monotone_x_3():
  line = d3.line().curve(curve_monotone_x)
  assert line([[0, 200], [0, 100], [100, 100], [200, 0]]) == "M0,200C0,200,0,100,0,100C33.333,100,66.667,100,100,100C133.333,100,166.667,50,200,0"
  assert line([[0, 200], [100, 100], [100, 0], [200, 0]]) == "M0,200C33.333,183.333,66.667,166.667,100,100C100,100,100,0,100,0C133.333,0,166.667,0,200,0"
  assert line([[0, 200], [100, 100], [200, 100], [200, 0]]) == "M0,200C33.333,150,66.667,100,100,100C133.333,100,166.667,100,200,100C200,100,200,0,200,0"

def test_monotone_x_4():
  line = d3.line().curve(curve_monotone_x)
  assert line([[0, 200], [100, 150], [100, 50], [200, 0]]) == "M0,200C33.333,191.667,66.667,183.333,100,150C100,150,100,50,100,50C133.333,16.667,166.667,8.333,200,0"
  assert line([[200, 0], [100, 50], [100, 150], [0, 200]]) == "M200,0C166.667,8.333,133.333,16.667,100,50C100,50,100,150,100,150C66.667,183.333,33.333,191.667,0,200"

def test_monotone_x_5():
  line = d3.line().curve(curve_monotone_x)
  p = line([[0, 200], [50, 200], [100, 100], [150, 0], [200, 0]])
  assert line([[0, 200], [0, 200], [50, 200], [100, 100], [150, 0], [200, 0]]) == p
  assert line([[0, 200], [50, 200], [50, 200], [100, 100], [150, 0], [200, 0]]) == p
  assert line([[0, 200], [50, 200], [100, 100], [100, 100], [150, 0], [200, 0]]) == p
  assert line([[0, 200], [50, 200], [100, 100], [150, 0], [150, 0], [200, 0]]) == p
  assert line([[0, 200], [50, 200], [100, 100], [150, 0], [200, 0], [200, 0]]) == p

def test_monotone_x_6():
  area = d3.area().curve(curve_monotone_x)
  assert area([]) is None
  assert area([[0, 1]]) == "M0,1L0,0Z"
  assert area([[0, 1], [1, 3]]) == "M0,1L1,3L1,0L0,0Z"
  assert area([[0, 1], [1, 3], [2, 1]]) == "M0,1C0.333,2,0.667,3,1,3C1.333,3,1.667,2,2,1L2,0C1.667,0,1.333,0,1,0C0.667,0,0.333,0,0,0Z"
  assert area([[0, 1], [1, 3], [2, 1], [3, 3]]) == "M0,1C0.333,2,0.667,3,1,3C1.333,3,1.667,1,2,1C2.333,1,2.667,2,3,3L3,0C2.667,0,2.333,0,2,0C1.667,0,1.333,0,1,0C0.667,0,0.333,0,0,0Z"
