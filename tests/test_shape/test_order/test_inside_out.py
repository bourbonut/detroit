import detroit as d3
from math import nan

def test_inside_out_1():
  assert d3.stack_order_inside_out([
    [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 1]],
    [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 2], [0, 0]],
    [[0, 0], [0, 0], [0, 0], [0, 0], [0, 3], [0, 0], [0, 0]],
    [[0, 0], [0, 0], [0, 0], [0, 4], [0, 0], [0, 0], [0, 0]],
    [[0, 0], [0, 0], [0, 5], [0, 0], [0, 0], [0, 0], [0, 0]],
    [[0, 0], [0, 6], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]],
    [[0, 7], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]]
  ]) == [2, 3, 6, 5, 4, 1, 0]

def test_inside_out_2():
  assert d3.stack_order_inside_out([
    [[0, 0], [0, nan], [0, 0], [0, 0], [0, 0], [0, 0], [0, 1]],
    [[0, 0], [0, 0], [0, nan], [0, 0], [0, 0], [0, 2], [0, 0]],
    [[0, 0], [0, 0], [0, 0], [0, 0], [0, 3], [0, 0], [0, 0]],
    [[0, 0], [0, 0], [0, 0], [0, 4], [0, nan], [0, 0], [0, 0]],
    [[0, 0], [0, 0], [0, 5], [0, 0], [0, 0], [0, nan], [0, 0]],
    [[0, nan], [0, 6], [0, 0], [0, nan], [0, 0], [0, 0], [0, 0]],
    [[0, 7], [0, nan], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]]
  ]) == [2, 3, 6, 5, 4, 1, 0]
